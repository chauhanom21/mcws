<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">


	<!-- <import resource="spring-cache-context.xml" />	 -->
	
	<context:annotation-config />
	
	<bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
        p:location="/WEB-INF/database.properties" />
        
    <!-- Database configuration -->
	<!-- <bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		p:driverClassName="${db.driverClassName}" p:url="${db.url}"
		p:username="${db.username}" p:password="${db.password}" />-->
		
    <bean id="dataSource" class = "com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${db.driverClassName}" />
        <property name="jdbcUrl" value="${db.url}" />
        <property name="user" value="${db.username}" />
        <property name="password" value="${db.password}" /> 

         <!-- these are C3P0 properties --> 
        <property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
        <property name="minPoolSize" value="${c3p0.minPoolSize}" />
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
        <property name="initialPoolSize" value="${c3p0.initialPoolSize}"/>
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
 	</bean>
		
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation">
			<value>classpath:hibernate.cfg.xml</value>
		</property>
		
		 <property name="hibernateProperties">
		   <props>
			    <prop key="hibernate.show_sql">${hibernate.showsql}</prop>
			    <prop key="hibernate.dialect">${db.dialect}</prop>
			    
			    <!-- configuration 2 level cache via Ehcache -->
			    <prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
		   </props>
		 </property>
	</bean>

	<tx:annotation-driven />
	
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="userDao"
		class="com.eclat.mcws.persistence.dao.UserDAOImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="customUserDetailsService"
		class="com.eclat.mcws.spring.security.CustomUserDetailsService">
		<property name="userDAO" ref="userDao" />
	</bean>
	
	<bean id="customAuthenticationEntryPoint"
		class="com.eclat.mcws.spring.security.RestAuthenticationEntryPoint" />
	
	<!-- SPRING SECURITY CONFIGURATION 	-->
	<security:http auto-config="true"  use-expressions="true" entry-point-ref="customAuthenticationEntryPoint">
		<security:custom-filter position="CONCURRENT_SESSION_FILTER" ref="concurrencyFilter" />
    	<security:custom-filter after="FORM_LOGIN_FILTER" ref="myAuthFilter" />

    	<security:session-management session-authentication-strategy-ref="sas"/>
    
        <security:intercept-url pattern="/web/user/*" access="permitAll"></security:intercept-url>
        <security:intercept-url pattern="/web/admin/*" access="hasRole('ADMIN')"></security:intercept-url>
        <security:intercept-url pattern="/web/coder/*" access="hasAnyRole('CODER', 'QA')"></security:intercept-url>
        <security:intercept-url pattern="/user/detail/*" access="hasAnyRole('CODER', 'QA', 'SUPERVISOR', 'ADMIN')"></security:intercept-url>
        <security:intercept-url pattern="/client/detail/*" access="hasAnyRole('CODER', 'QA', 'SUPERVISOR', 'ADMIN')"></security:intercept-url>
        <security:intercept-url pattern="/web/supervisor/*" access="hasRole('SUPERVISOR')"></security:intercept-url>  
        
        <security:form-login login-page="/web/user/login"  default-target-url='/web/user/home' 
        	authentication-failure-url="/web/user/accessdenied" always-use-default-target="true"></security:form-login>
        <security:logout logout-success-url="/web/user/login" delete-cookies="JSESSIONID"></security:logout>
    </security:http>
 
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="customUserDetailsService" />
    </security:authentication-manager>

    <bean id="concurrencyFilter"
      class="org.springframework.security.web.session.ConcurrentSessionFilter">
    	<property name="sessionRegistry" ref="sessionRegistry" />
    	<property name="expiredUrl" value="/session_expired.html" />
  	</bean>

  	<bean id="myAuthFilter"
      class="org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter">
     	<property name="sessionAuthenticationStrategy" ref="sas" />
     	<property name="authenticationManager" ref="authenticationManager" />
  	</bean>

  	<bean id="sas"
      class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
    	<constructor-arg name="sessionRegistry" ref="sessionRegistry" />
    	<property name="maximumSessions" value="1" />
  	</bean>

  	<bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />
</beans>